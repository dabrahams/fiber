#if !os(macOS)
import XCTest

extension AsyncTests {
    // DO NOT MODIFY: This is autogenerated, use: 
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AsyncTests = [
        ("testAwaiterDeadline", testAwaiterDeadline),
        ("testSyncTask", testSyncTask),
        ("testSyncTaskCancel", testSyncTaskCancel),
        ("testTask", testTask),
    ]
}

extension BroadcastTests {
    // DO NOT MODIFY: This is autogenerated, use: 
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BroadcastTests = [
        ("testBroadcast", testBroadcast),
    ]
}

extension ChannelTests {
    // DO NOT MODIFY: This is autogenerated, use: 
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ChannelTests = [
        ("testChannel", testChannel),
        ("testChannelCapacity0", testChannelCapacity0),
        ("testChannelCapacity1", testChannelCapacity1),
        ("testChannelClose", testChannelClose),
        ("testChannelCloseHasReader", testChannelCloseHasReader),
        ("testChannelCloseHasWaitingReader", testChannelCloseHasWaitingReader),
        ("testChannelCloseHasWaitingWriter", testChannelCloseHasWaitingWriter),
        ("testChannelCloseNoReader", testChannelCloseNoReader),
        ("testChannelHasReader", testChannelHasReader),
        ("testChannelHasWriter", testChannelHasWriter),
    ]
}

extension DispatchTests {
    // DO NOT MODIFY: This is autogenerated, use: 
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DispatchTests = [
        ("testDispatch", testDispatch),
        ("testDispatchThrow", testDispatchThrow),
    ]
}

extension FiberLoopTests {
    // DO NOT MODIFY: This is autogenerated, use: 
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FiberLoopTests = [
        ("testEvenLoopAnotherThread", testEvenLoopAnotherThread),
        ("testEventLoop", testEventLoop),
        ("testEventLoopCurrent", testEventLoopCurrent),
        ("testEventLoopMain", testEventLoopMain),
        ("testFiberLoop", testFiberLoop),
        ("testLoopRunDeadline", testLoopRunDeadline),
        ("testPollDeadline", testPollDeadline),
        ("testYieldDefersInTheSameCycle", testYieldDefersInTheSameCycle),
    ]
}

extension FiberTests {
    // DO NOT MODIFY: This is autogenerated, use: 
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FiberTests = [
        ("testFiber", testFiber),
        ("testMemoryLeak", testMemoryLeak),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AsyncTests.__allTests__AsyncTests),
        testCase(BroadcastTests.__allTests__BroadcastTests),
        testCase(ChannelTests.__allTests__ChannelTests),
        testCase(DispatchTests.__allTests__DispatchTests),
        testCase(FiberLoopTests.__allTests__FiberLoopTests),
        testCase(FiberTests.__allTests__FiberTests),
    ]
}
#endif
